{"version":3,"file":"494.js","mappings":"2OAWe,MAAMA,EAKjB,WAAAC,CAAYC,EAAYC,GACpBC,KAAKF,WAAaA,EAClBE,KAAKD,KAAOA,CAChB,CAEA,UAAME,CAAKC,GACP,IAAYD,KAAK,CACbE,EAAGD,EAAEE,MACLC,EAAGH,EAAEI,MACLC,YAAaP,KAAKQ,eAClBC,sBAAuB,CAACC,EAAMR,IAAMF,KAAKS,sBAAsBC,IAEvE,CAEA,kBAAMF,GACF,MAAMG,QAAa,UAAMC,QAAQZ,KAAKD,KAAKc,KAAKC,QAC1CC,EAAS,UAAMC,UAAUhB,KAAKD,KAAKc,KAAKI,UACxCC,EAA4B,SAAhBP,EAAKG,OACjBK,EAAYR,EAAKG,SAAW,UAAWM,WAAWC,mBAAmBC,cACrEC,EAAaL,QAAkB,UAAMN,QAAQG,EAAOS,cAAgB,KAKpEC,EAAWzB,KAAKF,WAAW4B,mBAC3BC,EAAsC,IAApBF,EAASG,QACD,IAApBH,EAASG,QAAgBH,EAAS,KAAOzB,KAAKD,KAEpD8B,EAA0B,WAAdlB,EAAKmB,KACjBC,GAAmBR,GAAkC,WAApBA,EAAWO,KAC5CE,EAAyBd,IAAcC,GAAaY,EAE1D,MAAO,CACH,CAAEE,MAAO,0CAA2CC,QAAS,YAAaC,OAAQ,cAAeC,QAAST,GAC1G,CAAEM,MAAO,sBAAuBC,QAAS,kBAAmBC,OAAQ,mBAAoBC,QAAST,GACjG,CAAEM,MAAO,+DAAgEC,QAAS,kBAAmBC,OAAQ,aACzG5B,MAAOyB,QAA+B,IAAiBK,iBAAiB,mBAAqB,KAC7FD,QAASJ,GAA0BL,GACvC,CAAEM,MAAO,8DAA+DC,QAAS,kBAAmBC,OAAQ,aACxG5B,MAAOsB,QAAkB,IAAiBQ,iBAAiB,mBAAqB,KAChFD,QAASP,GAAaF,GAC1B,CAAEM,MAAO,gDAAiDC,QAAS,cAAeC,OAAQ,cACtFC,QAASlB,IAAcC,GAAaY,GACxC,CAAEE,MAAO,QACT,CAAEA,MAAO,+DAAgEC,QAAS,kBAAmBC,OAAQ,eACzGC,QAASP,GAAaF,GAC1BR,EAAY,KAAO,CAAEc,MAAO,2DAA4DC,QAAS,qBAAsBC,OAAQ,cAAeC,QAAST,GAAmBE,GACzKV,GAAcD,EAAmB,CAAEe,MAAO,6DAA8DC,QAAS,qBAAsBC,OAAQ,mBAArH,KAC3B,CAAEF,MAAO,iEAAkEC,QAAS,mBAAoBC,OAAQ,cAC5GC,QAASlB,GAAaa,GAAmBJ,GAC7C,CAAEM,MAAO,WAAYE,OAAQ,cAAeC,SAAS,EAAM7B,MAAO,CAC1D,CAAE0B,MAAO,0DAA2DC,QAAS,gBAAiBC,OAAQ,eAAgBC,QAAST,GAC/H,CAAEM,MAAO,8DAA+DC,QAAS,kBAAmBC,OAAQ,iBAAkBC,QAAST,GACvI,CAAEM,MAAO,wDAAyDC,QAAS,iBAAkBC,OAAQ,cAAeC,QAAST,GAAmBE,GAChJ,CAAEI,MAAO,4BAA6BC,QAAS,yBAA0BC,OAAQ,gBAAiBC,QAAST,GAC3G,CAAEM,MAAO,wBAAyBC,QAAS,0BAA2BC,OAAQ,cAAeC,QAASlB,IAAcC,GACpH,CAAEc,MAAO,8BAA+BC,QAAS,0BAA2BC,OAAQ,cAAeC,SAAS,KAEpH,CAAEH,MAAO,QACT,CAAEA,MAAO,kBAAmBC,QAAS,iBAAkBC,OAAQ,qBAAsBC,QAAST,GAC9F,CAAEM,MAAO,oBAAqBC,QAAS,mBAAoBC,OAAQ,eAAgBC,QAAST,GAC5F,CAAEM,MAAO,QACT,CAAEA,MAAO,+DAAgEC,QAAS,uBAAwBC,OAAQ,aAC9GC,QAASlB,IAAcC,GAC3B,CAAEc,MAAO,uDAAwDC,QAAS,eAAgBC,OAAQ,cAC9FC,QAASlB,IAAcC,GAC3B,CAAEc,MAAO,qDAAsDC,QAAS,sBAAuBC,OAAQ,YACnGC,QAASlB,IAAcC,GAAaY,GACxC,CAAEE,MAAO,qDAAsDC,QAAS,cAAeC,OAAQ,cAC3FC,QAASlB,IAAcC,GAAaY,GACxC,CAAEE,MAAO,gEAAiEC,QAAS,0BAA2BC,OAAQ,cAClHC,SAAU,IAAUE,oBAAsBT,GAAaF,GAC3D,CAAEM,MAAO,cAAeC,QAAS,+BAAgCC,OAAQ,cACrEC,SAAU,IAAUE,oBAAsBpB,IAAcC,GAAaY,GAAmBJ,GAC5F,CAAEM,MAAO,0DAA2DC,QAAS,mBAAoBC,OAAQ,cACrGC,QAASL,GAAmBb,IAAcC,GAC9C,CAAEc,MAAO,QACT,CAAEA,MAAO,SAAUC,QAAS,aAAcC,OAAQ,cAC9CC,QAASP,GAAaF,GAC1B,CAAEM,MAAO,mBAAoBC,QAAS,iBAAkBC,OAAQ,cAC5DC,QAASP,GAAaF,GAC1B,CAAEM,MAAO,qBAAsBC,QAAS,wBAAyBC,OAAQ,kBACrEC,SAAS,IACfG,QAAOC,GAAe,OAARA,GACpB,CAEA,2BAAM/B,EAAsB,QAACyB,EAAO,KAAEJ,EAAI,eAAEW,IACxC,MAAMC,EAAW,IAAYC,YAAY3C,KAAKD,MAE9C,GAAgB,cAAZmC,EACA,UAAWd,WAAWwB,4BAA4BF,QAEjD,GAAgB,oBAAZR,EAA+B,CACpC,MAAMW,EAAiB,IAAYF,YAAY3C,KAAKD,KAAK+C,aACnDC,EAAc,IAAYC,yBAAyBhD,KAAKD,MAE9D,IAAkBkD,WAAWJ,EAAgB,CACzCK,OAAQ,QACRC,eAAgBnD,KAAKD,KAAKc,KAAKI,SAC/Ba,KAAMA,EACNiB,YAAaA,EACbN,eAAgBA,GAExB,MACK,GAAgB,oBAAZP,EAA+B,CACpC,MAAMW,EAAiB,IAAYF,YAAY3C,KAAKD,MAEpD,IAAkBkD,WAAWJ,EAAgB,CACzCf,KAAMA,EACNiB,YAAa/C,KAAKD,KAAKc,KAAKkC,YAC5BN,eAAgBA,GAExB,MACK,GAAgB,oBAAZP,EAA+B,CACpC,MAAMkB,EAAc,UAAWhC,WAAWC,mBAAmBgC,kBACvD,MAACC,GAASF,EAAYA,EAAYxB,OAAS,GAEjD5B,KAAKF,WAAWyD,eAAe,mBAAoB,CAACD,QAAOZ,YAC/D,MACK,GAAgB,4BAAZR,EAAuC,CAC5C,UAAW,IAAcsB,QAAQ,gGAC7B,OAGJ,IAAIC,EAAY,EAEhB,IAAK,MAAM3C,KAAUd,KAAKF,WAAW4D,2BAA2B1D,KAAKD,MAAO,CACxE,MAAMY,QAAa,UAAMC,QAAQE,GAEjC,GAAIH,EAAKgD,sCAAuC,CAC5C,MAAM,WAACC,SAAoB,IAAOC,KAAK,SAASlD,EAAKG,gCAEjD8C,GACAH,GAER,CACJ,CAEA,UAAaK,YAAY,GAAGL,8CAChC,KACqB,4BAAZvB,EACL6B,UAAUC,UAAUC,UAAU,IAAMvB,GAGpC1C,KAAKF,WAAWyD,eAAerB,EAAS,CACpCnC,KAAMC,KAAKD,KACX2C,SAAUA,EACV5B,OAAQd,KAAKD,KAAKc,KAAKC,OACvBoD,0BAA2BlE,KAAKF,WAAWqE,6BAA6BnE,KAAKD,MAC7EqE,wBAAyBpE,KAAKF,WAAW4D,2BAA2B1D,KAAKD,OAGrF,E,0DCnIJ,SACIsC,iBAnCJgC,eAAgCnC,GAC5B,MAAM3B,EAAQ,CACV,CAAE0B,MAAO,OAAQC,QAASA,EAASJ,KAAM,OAAQK,OAAQ,cACzD,CAAEF,MAAO,OAAQC,QAASA,EAASJ,KAAM,OAAQK,OAAQ,cACzD,CAAEF,MAAO,eAAgBC,QAASA,EAASJ,KAAM,SAAUK,OAAQ,mBACnE,CAAEF,MAAO,eAAgBC,QAASA,EAASJ,KAAM,cAAeK,OAAQ,iBACxE,CAAEF,MAAO,WAAYC,QAASA,EAASJ,KAAM,UAAWK,OAAQ,iBAChE,CAAEF,MAAO,cAAeC,QAASA,EAASJ,KAAM,SAAUK,OAAQ,mBAClE,CAAEF,MAAO,OAAQC,QAASA,EAASJ,KAAM,OAAQK,OAAQ,cACzD,CAAEF,MAAO,kBAAmBC,QAASA,EAASJ,KAAM,UAAWK,OAAQ,mBACvE,CAAEF,MAAO,SAAUC,QAASA,EAASJ,KAAM,SAAUK,OAAQ,aAC7D,CAAEF,MAAO,WAAYC,QAASA,EAASJ,KAAM,UAAWK,OAAQ,oBAG9DmC,QAAwB,IAAOC,IAAI,oBACnCC,QAAsB,UAAMC,SAASH,GAE3C,GAAIE,EAAc5C,OAAS,EAAG,CAC1BrB,EAAMmE,KAAK,CAAEzC,MAAO,SAEpB,IAAK,MAAM0C,KAAgBH,EACvBjE,EAAMmE,KAAK,CACPzC,MAAO0C,EAAa1C,MACpBE,OAAQwC,EAAaC,UACrB1C,QAASA,EACTJ,KAAM6C,EAAa7C,KACnBW,eAAgBkC,EAAa7D,QAGzC,CAEA,OAAOP,CACX,E","sources":["webpack://trilium/./src/public/app/menus/tree_context_menu.js","webpack://trilium/./src/public/app/services/note_types.js"],"sourcesContent":["import treeService from '../services/tree.js';\nimport froca from \"../services/froca.js\";\nimport clipboard from '../services/clipboard.js';\nimport noteCreateService from \"../services/note_create.js\";\nimport contextMenu from \"./context_menu.js\";\nimport appContext from \"../components/app_context.js\";\nimport noteTypesService from \"../services/note_types.js\";\nimport server from \"../services/server.js\";\nimport toastService from \"../services/toast.js\";\nimport dialogService from \"../services/dialog.js\";\n\nexport default class TreeContextMenu {\n    /**\n     * @param {NoteTreeWidget} treeWidget\n     * @param {FancytreeNode} node\n     */\n    constructor(treeWidget, node) {\n        this.treeWidget = treeWidget;\n        this.node = node;\n    }\n\n    async show(e) {\n        contextMenu.show({\n            x: e.pageX,\n            y: e.pageY,\n            items: await this.getMenuItems(),\n            selectMenuItemHandler: (item, e) => this.selectMenuItemHandler(item)\n        })\n    }\n\n    async getMenuItems() {\n        const note = await froca.getNote(this.node.data.noteId);\n        const branch = froca.getBranch(this.node.data.branchId);\n        const isNotRoot = note.noteId !== 'root';\n        const isHoisted = note.noteId === appContext.tabManager.getActiveContext().hoistedNoteId;\n        const parentNote = isNotRoot ? await froca.getNote(branch.parentNoteId) : null;\n\n        // some actions don't support multi-note, so they are disabled when notes are selected,\n        // the only exception is when the only selected note is the one that was right-clicked, then\n        // it's clear what the user meant to do.\n        const selNodes = this.treeWidget.getSelectedNodes();\n        const noSelectedNotes = selNodes.length === 0\n                || (selNodes.length === 1 && selNodes[0] === this.node);\n\n        const notSearch = note.type !== 'search';\n        const parentNotSearch = !parentNote || parentNote.type !== 'search';\n        const insertNoteAfterEnabled = isNotRoot && !isHoisted && parentNotSearch;\n\n        return [\n            { title: 'Open in a new tab <kbd>Ctrl+Click</kbd>', command: \"openInTab\", uiIcon: \"bx bx-empty\", enabled: noSelectedNotes },\n            { title: 'Open in a new split', command: \"openNoteInSplit\", uiIcon: \"bx bx-dock-right\", enabled: noSelectedNotes },\n            { title: 'Insert note after <kbd data-command=\"createNoteAfter\"></kbd>', command: \"insertNoteAfter\", uiIcon: \"bx bx-plus\",\n                items: insertNoteAfterEnabled ? await noteTypesService.getNoteTypeItems(\"insertNoteAfter\") : null,\n                enabled: insertNoteAfterEnabled && noSelectedNotes },\n            { title: 'Insert child note <kbd data-command=\"createNoteInto\"></kbd>', command: \"insertChildNote\", uiIcon: \"bx bx-plus\",\n                items: notSearch ? await noteTypesService.getNoteTypeItems(\"insertChildNote\") : null,\n                enabled: notSearch && noSelectedNotes },\n            { title: 'Delete <kbd data-command=\"deleteNotes\"></kbd>', command: \"deleteNotes\", uiIcon: \"bx bx-trash\",\n                enabled: isNotRoot && !isHoisted && parentNotSearch },\n            { title: \"----\" },\n            { title: 'Search in subtree <kbd data-command=\"searchInSubtree\"></kbd>', command: \"searchInSubtree\", uiIcon: \"bx bx-search\",\n                enabled: notSearch && noSelectedNotes },\n            isHoisted ? null : { title: 'Hoist note <kbd data-command=\"toggleNoteHoisting\"></kbd>', command: \"toggleNoteHoisting\", uiIcon: \"bx bx-empty\", enabled: noSelectedNotes && notSearch },\n            !isHoisted || !isNotRoot ? null : { title: 'Unhoist note <kbd data-command=\"toggleNoteHoisting\"></kbd>', command: \"toggleNoteHoisting\", uiIcon: \"bx bx-door-open\" },\n            { title: 'Edit branch prefix <kbd data-command=\"editBranchPrefix\"></kbd>', command: \"editBranchPrefix\", uiIcon: \"bx bx-empty\",\n                enabled: isNotRoot && parentNotSearch && noSelectedNotes},\n            { title: \"Advanced\", uiIcon: \"bx bx-empty\", enabled: true, items: [\n                    { title: 'Expand subtree <kbd data-command=\"expandSubtree\"></kbd>', command: \"expandSubtree\", uiIcon: \"bx bx-expand\", enabled: noSelectedNotes },\n                    { title: 'Collapse subtree <kbd data-command=\"collapseSubtree\"></kbd>', command: \"collapseSubtree\", uiIcon: \"bx bx-collapse\", enabled: noSelectedNotes },\n                    { title: 'Sort by ... <kbd data-command=\"sortChildNotes\"></kbd>', command: \"sortChildNotes\", uiIcon: \"bx bx-empty\", enabled: noSelectedNotes && notSearch },\n                    { title: 'Recent changes in subtree', command: \"recentChangesInSubtree\", uiIcon: \"bx bx-history\", enabled: noSelectedNotes },\n                    { title: 'Convert to attachment', command: \"convertNoteToAttachment\", uiIcon: \"bx bx-empty\", enabled: isNotRoot && !isHoisted },\n                    { title: 'Copy note path to clipboard', command: \"copyNotePathToClipboard\", uiIcon: \"bx bx-empty\", enabled: true }\n                ] },\n            { title: \"----\" },\n            { title: \"Protect subtree\", command: \"protectSubtree\", uiIcon: \"bx bx-check-shield\", enabled: noSelectedNotes },\n            { title: \"Unprotect subtree\", command: \"unprotectSubtree\", uiIcon: \"bx bx-shield\", enabled: noSelectedNotes },\n            { title: \"----\" },\n            { title: 'Copy / clone <kbd data-command=\"copyNotesToClipboard\"></kbd>', command: \"copyNotesToClipboard\", uiIcon: \"bx bx-copy\",\n                enabled: isNotRoot && !isHoisted },\n            { title: 'Clone to ... <kbd data-command=\"cloneNotesTo\"></kbd>', command: \"cloneNotesTo\", uiIcon: \"bx bx-empty\",\n                enabled: isNotRoot && !isHoisted },\n            { title: 'Cut <kbd data-command=\"cutNotesToClipboard\"></kbd>', command: \"cutNotesToClipboard\", uiIcon: \"bx bx-cut\",\n                enabled: isNotRoot && !isHoisted && parentNotSearch },\n            { title: 'Move to ... <kbd data-command=\"moveNotesTo\"></kbd>', command: \"moveNotesTo\", uiIcon: \"bx bx-empty\",\n                enabled: isNotRoot && !isHoisted && parentNotSearch },\n            { title: 'Paste into <kbd data-command=\"pasteNotesFromClipboard\"></kbd>', command: \"pasteNotesFromClipboard\", uiIcon: \"bx bx-paste\",\n                enabled: !clipboard.isClipboardEmpty() && notSearch && noSelectedNotes },\n            { title: 'Paste after', command: \"pasteNotesAfterFromClipboard\", uiIcon: \"bx bx-paste\",\n                enabled: !clipboard.isClipboardEmpty() && isNotRoot && !isHoisted && parentNotSearch && noSelectedNotes },\n            { title: `Duplicate subtree <kbd data-command=\"duplicateSubtree\">`, command: \"duplicateSubtree\", uiIcon: \"bx bx-empty\",\n                enabled: parentNotSearch && isNotRoot && !isHoisted },\n            { title: \"----\" },\n            { title: \"Export\", command: \"exportNote\", uiIcon: \"bx bx-empty\",\n                enabled: notSearch && noSelectedNotes },\n            { title: \"Import into note\", command: \"importIntoNote\", uiIcon: \"bx bx-empty\",\n                enabled: notSearch && noSelectedNotes },\n            { title: \"Apply bulk actions\", command: \"openBulkActionsDialog\", uiIcon: \"bx bx-list-plus\",\n                enabled: true }\n        ].filter(row => row !== null);\n    }\n\n    async selectMenuItemHandler({command, type, templateNoteId}) {\n        const notePath = treeService.getNotePath(this.node);\n\n        if (command === 'openInTab') {\n            appContext.tabManager.openTabWithNoteWithHoisting(notePath);\n        }\n        else if (command === \"insertNoteAfter\") {\n            const parentNotePath = treeService.getNotePath(this.node.getParent());\n            const isProtected = treeService.getParentProtectedStatus(this.node);\n\n            noteCreateService.createNote(parentNotePath, {\n                target: 'after',\n                targetBranchId: this.node.data.branchId,\n                type: type,\n                isProtected: isProtected,\n                templateNoteId: templateNoteId\n            });\n        }\n        else if (command === \"insertChildNote\") {\n            const parentNotePath = treeService.getNotePath(this.node);\n\n            noteCreateService.createNote(parentNotePath, {\n                type: type,\n                isProtected: this.node.data.isProtected,\n                templateNoteId: templateNoteId\n            });\n        }\n        else if (command === 'openNoteInSplit') {\n            const subContexts = appContext.tabManager.getActiveContext().getSubContexts();\n            const {ntxId} = subContexts[subContexts.length - 1];\n\n            this.treeWidget.triggerCommand(\"openNewNoteSplit\", {ntxId, notePath});\n        }\n        else if (command === 'convertNoteToAttachment') {\n            if (!await dialogService.confirm(`Are you sure you want to convert note selected notes into attachments of their parent notes?`)) {\n                return;\n            }\n\n            let converted = 0;\n\n            for (const noteId of this.treeWidget.getSelectedOrActiveNoteIds(this.node)) {\n                const note = await froca.getNote(noteId);\n\n                if (note.isEligibleForConversionToAttachment()) {\n                    const {attachment} = await server.post(`notes/${note.noteId}/convert-to-attachment`);\n\n                    if (attachment) {\n                        converted++;\n                    }\n                }\n            }\n\n            toastService.showMessage(`${converted} notes have been converted to attachments.`);\n        }\n        else if (command === 'copyNotePathToClipboard') {\n            navigator.clipboard.writeText('#' + notePath);\n        }\n        else {\n            this.treeWidget.triggerCommand(command, {\n                node: this.node,\n                notePath: notePath,\n                noteId: this.node.data.noteId,\n                selectedOrActiveBranchIds: this.treeWidget.getSelectedOrActiveBranchIds(this.node),\n                selectedOrActiveNoteIds: this.treeWidget.getSelectedOrActiveNoteIds(this.node)\n            });\n        }\n    }\n}\n","import server from \"./server.js\";\nimport froca from \"./froca.js\";\n\nasync function getNoteTypeItems(command) {\n    const items = [\n        { title: \"Text\", command: command, type: \"text\", uiIcon: \"bx bx-note\" },\n        { title: \"Code\", command: command, type: \"code\", uiIcon: \"bx bx-code\" },\n        { title: \"Saved Search\", command: command, type: \"search\", uiIcon: \"bx bx-file-find\" },\n        { title: \"Relation Map\", command: command, type: \"relationMap\", uiIcon: \"bx bx-map-alt\" },\n        { title: \"Note Map\", command: command, type: \"noteMap\", uiIcon: \"bx bx-map-alt\" },\n        { title: \"Render Note\", command: command, type: \"render\", uiIcon: \"bx bx-extension\" },\n        { title: \"Book\", command: command, type: \"book\", uiIcon: \"bx bx-book\" },\n        { title: \"Mermaid Diagram\", command: command, type: \"mermaid\", uiIcon: \"bx bx-selection\" },\n        { title: \"Canvas\", command: command, type: \"canvas\", uiIcon: \"bx bx-pen\" },\n        { title: \"Web View\", command: command, type: \"webView\", uiIcon: \"bx bx-globe-alt\" },\n    ];\n\n    const templateNoteIds = await server.get(\"search-templates\");\n    const templateNotes = await froca.getNotes(templateNoteIds);\n\n    if (templateNotes.length > 0) {\n        items.push({ title: \"----\" });\n\n        for (const templateNote of templateNotes) {\n            items.push({\n                title: templateNote.title,\n                uiIcon: templateNote.getIcon(),\n                command: command,\n                type: templateNote.type,\n                templateNoteId: templateNote.noteId\n            });\n        }\n    }\n\n    return items;\n}\n\nexport default {\n    getNoteTypeItems\n}\n"],"names":["TreeContextMenu","constructor","treeWidget","node","this","show","e","x","pageX","y","pageY","items","getMenuItems","selectMenuItemHandler","item","note","getNote","data","noteId","branch","getBranch","branchId","isNotRoot","isHoisted","tabManager","getActiveContext","hoistedNoteId","parentNote","parentNoteId","selNodes","getSelectedNodes","noSelectedNotes","length","notSearch","type","parentNotSearch","insertNoteAfterEnabled","title","command","uiIcon","enabled","getNoteTypeItems","isClipboardEmpty","filter","row","templateNoteId","notePath","getNotePath","openTabWithNoteWithHoisting","parentNotePath","getParent","isProtected","getParentProtectedStatus","createNote","target","targetBranchId","subContexts","getSubContexts","ntxId","triggerCommand","confirm","converted","getSelectedOrActiveNoteIds","isEligibleForConversionToAttachment","attachment","post","showMessage","navigator","clipboard","writeText","selectedOrActiveBranchIds","getSelectedOrActiveBranchIds","selectedOrActiveNoteIds","async","templateNoteIds","get","templateNotes","getNotes","push","templateNote","getIcon"],"sourceRoot":""}